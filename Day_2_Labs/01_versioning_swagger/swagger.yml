openapi: 3.0.1
info:
  title: Starbucks API Example
  description: Starbucks API
  version: 2.0.0
servers:
- url: /api
paths:
  /coffee:
    get:
      tags:
      - Coffee
      summary: The coffee data structure for our server application
      description: Read the list of coffee drinks
      operationId: coffee.read
      responses:
        200:
          description: Successful read coffee list operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    coffee_name:
                      type: string
                    milk:
                      type: string
                    timestamp:
                      type: string
    post:
      tags:
      - Coffee
      summary: Create a coffee drink and add it to the coffee list
      description: Create a new drink in the coffee list
      operationId: coffee.create
      requestBody:
        description: Coffee to create
        content:
          application/json:
            schema:
              type: object
              properties:
                coffee_name:
                  type: string
                  description: Name of drink
                milk:
                  type: string
                  description: type of milk to use
        required: true
      responses:
        201:
          description: Successfully created coffee drink in list
          content: {}
      x-codegen-request-body-name: coffee
  /coffee/{coffee_name}:
    get:
      tags:
      - Coffee
      summary: Read one drink from the coffee object
      description: Read one drink from the coffee object
      operationId: coffee.read_one
      parameters:
      - name: coffee_name
        in: path
        description: Name of coffee get from the list
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully read coffee from coffee list
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
      - Coffee
      summary: Update a coffee drink
      description: Update a coffee drink in the coffee object
      operationId: coffee.update
      parameters:
      - name: coffee_name
        in: path
        description: Name the drink to update
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                coffee_name:
                  type: string
        required: false
      responses:
        200:
          description: Successfully updated coffee name
          content: {}
      x-codegen-request-body-name: coffee
    delete:
      tags:
      - Coffee
      summary: Delete a coffee drink
      description: Delete a coffee drink in the coffee object
      operationId: coffee.delete
      parameters:
      - name: coffee_name
        in: path
        description: Name the drink to Delete
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successfully deleted coffee drink
          content: {}
components: {}
